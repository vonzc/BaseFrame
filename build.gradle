// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    //引用自定义的versions.gradle里的参数
    apply from: 'versions.gradle'
    ext {
        kotlin_version = '1.3.72'
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        //使用butterKnife需先在根build.gradle添加这一行
        classpath "com.jakewharton:butterknife-gradle-plugin:9.0.0-rc2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}
//给所有Child Project配置
subprojects {
    //除了runModule外都是library
    if (name == runModule) {
        apply plugin: 'com.android.application'
    } else {
        apply plugin: 'com.android.library'
    }

    //这些配置在各个模块中基本一样，在此统一配置
    android {
        compileSdkVersion 30
        buildToolsVersion "30.0.3"

        defaultConfig {
            //只有需要运行的module有applicationId
            if (name == runModule) {
                applicationId "com.example.baseframe"
            }
            minSdkVersion 21
            targetSdkVersion 30
            versionCode 1
            versionName "1.0"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            consumerProguardFiles "consumer-rules.pro"

            //不管子module是否用到了ARouter，都需要进行如下配置
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = [AROUTER_MODULE_NAME: project.getName()]
                }
            }
        }

        //使用Java8
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        buildTypes {
            debug {
                //是否混淆
                minifyEnabled false
            }

            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}